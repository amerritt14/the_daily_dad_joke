<div class="min-h-screen bg-gray-50 py-12 px-4 sm:px-6 lg:px-8">
  <div class="max-w-2xl mx-auto">
    <div class="text-center mb-8">
      <h1 class="text-4xl font-bold text-gray-900 mb-4">Submit a Dad Joke</h1>
      <p class="text-lg text-gray-600">
        Got a great dad joke? Share it with the world! All submissions will be reviewed before publication.
      </p>
    </div>

    <div class="bg-white shadow-lg rounded-lg p-8">
      <%= form_with(model: joke, local: true, class: "space-y-6") do |form| %>
        <% if joke.errors.any? %>
          <div class="bg-red-50 border border-red-200 rounded-md p-4">
            <div class="flex">
              <div class="flex-shrink-0">
                <svg class="h-5 w-5 text-red-400" viewBox="0 0 20 20" fill="currentColor">
                  <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd" />
                </svg>
              </div>
              <div class="ml-3">
                <h3 class="text-sm font-medium text-red-800">
                  There were some problems with your submission:
                </h3>
                <div class="mt-2 text-sm text-red-700">
                  <ul class="list-disc pl-5 space-y-1">
                    <% joke.errors.full_messages.each do |message| %>
                      <li><%= message %></li>
                    <% end %>
                  </ul>
                </div>
              </div>
            </div>
          </div>
        <% end %>

        <div>
          <%= form.label :prompt, "Setup/Prompt", class: "block text-sm font-medium text-gray-700 mb-2" %>
          <%= form.text_area :prompt,
              class: "block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm",
              placeholder: "Why don't scientists trust atoms?",
              rows: 3 %>
          <p class="mt-1 text-sm text-gray-500">The setup or prompt part of your joke (10-500 characters)</p>
        </div>

        <div>
          <%= form.label :punchline, "Punchline", class: "block text-sm font-medium text-gray-700 mb-2" %>
          <%= form.text_area :punchline,
              class: "block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm",
              placeholder: "Because they make up everything!",
              rows: 3 %>
          <p class="mt-1 text-sm text-gray-500">The punchline (optional, max 500 characters)</p>
        </div>

        <%# Honeypot field - hidden from humans, but bots might fill it %>
        <div style="display: none;">
          <%= form.text_field :website, placeholder: "Leave this field empty", tabindex: -1, autocomplete: "off" %>
        </div>

        <div data-controller="recaptcha">
          <div class="flex justify-center">
            <%= recaptcha_tags(theme: 'light', size: 'normal') %>
          </div>
          <p class="mt-1 text-sm text-gray-500 text-center">Please verify that you're not a robot</p>
        </div>

        <div class="pt-4">
          <%= form.submit "Submit Joke",
              class: "w-full bg-indigo-600 hover:bg-indigo-700 text-white font-medium py-3 px-6 rounded-md focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 transition duration-200" %>
        </div>
      <% end %>
    </div>

    <div class="mt-8 text-center">
      <p class="text-sm text-gray-500">
        By submitting a joke, you agree that it will be reviewed and may be published on this site.
        We reserve the right to edit or reject submissions.
      </p>
    </div>
  </div>
</div>

<script>
  // Handle reCAPTCHA initialization for Turbo
  document.addEventListener('DOMContentLoaded', function() {
    initRecaptcha();
  });

  document.addEventListener('turbo:render', function() {
    initRecaptcha();
  });

  function initRecaptcha() {
    // Wait for reCAPTCHA script to load
    var attempts = 0;
    var maxAttempts = 50; // 5 seconds max
    
    function checkAndRender() {
      attempts++;
      
      if (window.grecaptcha && window.grecaptcha.render) {
        var containers = document.querySelectorAll('.g-recaptcha:not([data-rendered="true"])');
        containers.forEach(function(container) {
          var sitekey = container.getAttribute('data-sitekey');
          if (sitekey) {
            try {
              grecaptcha.render(container, {
                'sitekey': sitekey
              });
              container.setAttribute('data-rendered', 'true');
            } catch (e) {
              console.warn('reCAPTCHA render failed:', e);
            }
          }
        });
      } else if (attempts < maxAttempts) {
        setTimeout(checkAndRender, 100);
      }
    }
    
    checkAndRender();
  }
</script>
